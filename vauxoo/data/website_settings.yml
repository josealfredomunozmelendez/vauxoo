-
    Vauxoo enable logo on the website
-
  !python {model: ir.ui.view}: |
    ctx = dict(self.env.context, active_test=True)
    self.with_context(ctx).browse(ref('website.layout_logo_show')).write({'active': True})
    self.with_context(ctx).browse(ref('website_blog.opt_blog_post_author_avatar')).write({'active': False})
    self.with_context(ctx).browse(ref('website_blog.opt_blog_rc_follow_us')).write({'active': True})
-
  Blessing public Menus
  Remove from the list of ids one time you are sure
  they will come back publically
-
  !python {model: website.menu}: |
    records = self.browse([
        ref('website_blog.menu_news'),
        ref('website_event.menu_events'),
        ref('website_forum.menu_questions'),
        ref('website_forum_doc.menu_questions'),
        ref('website_sale.menu_shop'),
    ])
    records.write({'parent_id': False})
-
  Setting the sequence to public menus
-
  !python {model: website.menu}: |
    record = self.browse([ref('website.menu_homepage')])
    record.write({'sequence': 5})

    record = self.browse([ref('website.menu_contactus')])
    record.write({'sequence': 100})
-
  Setting blog views the one actives.
-
  !python {model: ir.ui.view}: |
    records = self.browse([
        ref('website_blog.index_right'),
        ref('website_blog.opt_blog_rc_history'),
        ref('website_blog.opt_blog_rc_blogs'),
        ref('website_sale.products_categories'),
        ])
    records.write({'active': True})
-
  Setting blog views.
  The one that are managed manually simply will be intentionally
  deactivated, only views setted manually here for POC
-
  !python {model: ir.ui.view}: |
    records = self.browse([
        ref('website_blog.opt_blog_rc_about_us'),
        ref('website_blog.opt_blog_rc_tags'),
        ref('website_blog.opt_blog_rc_status'),
        ref('website_blog.opt_blog_rc_blogs'),
        ref('website_blog.opt_blog_rc_follow_us'),
        ref('website_blog.opt_blog_rc_history'),
        ref('website_hr.aboutus')])
    records.write({'active': False})
-
  Disable Odoo Oauth provider
-
  !python {model: auth.oauth.provider}: |
    record = self.browse(ref('auth_oauth.provider_openerp'))
    record.write({'enabled': False})
-
  Change Google Log In button name to Login
-
  !python {model: auth.oauth.provider}: |
    record = self.browse(ref('auth_oauth.provider_google'))
    record.write({'body': 'Log In'})
