-
  Update rule related to the project task that has noupdate True
-
  !python {model: ir.model.data}: |
    model_data = self.search([
        ('module', '=', 'website_project'),
        ('name', '=', 'portal_task_rule')])[0]
    model_data.write({'noupdate': False})
-
  !python {model: ir.rule}: |
    rule = self.browse([ref('website_project.portal_task_rule')])
    rule.write({
        'domain_force': """[
            ('project_id.privacy_visibility', '=', 'portal'),
            ('partner_id', 'child_of', user.partner_id.commercial_partner_id.id),
        ]"""
    })
-
  !python {model: ir.model.data}: |
    model_data = self.search([
        ('module', '=', 'website_project'),
        ('name', '=', 'portal_task_rule')])[0]
    model_data.write({'noupdate': True})
-
  Update rule related to the project that has noupdate True
-
  !python {model: ir.model.data}: |
    model_data = self.search([
        ('module', '=', 'website_project'),
        ('name', '=', 'portal_project_rule')])[0]
    model_data.write({'noupdate': False})
-
  !python {model: ir.rule}: |
    rule = self.browse([ref('website_project.portal_project_rule')])
    rule.write({
        'domain_force': """[
            ('privacy_visibility', '=', 'portal'), '|',
            ('task_ids.partner_id', 'child_of', user.partner_id.commercial_partner_id.id),
            ('partner_id', 'child_of', user.partner_id.commercial_partner_id.id),
        ]"""
    })
-
  !python {model: ir.model.data}: |
    model_data = self.search([
        ('module', '=', 'website_project'),
        ('name', '=', 'portal_project_rule')])[0]
    model_data.write({'noupdate': True})
