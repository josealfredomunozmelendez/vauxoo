image: vauxoo/odoo-80-image-shippable-auto
stages:
  - test
  - test_build
  - build
  - cleanup

variables:
    PSQL_VERSION: "9.5"
    VERSION: "10.0"
    ODOO_REPO: "vauxoo/odoo"
    INCLUDE: "erp_vauxoo_com"
    INSTALL: "erp_vauxoo_com"
    BASE_IMAGE: "vauxoo/odoo-100-image"

before_script:
  - sh -c "if which /sbin/apk >/dev/null; then apk add --update openssh python python-dev py-pip build-base git postgresql-contrib postgresql-client postgresql-dev libffi-dev; fi"
  - mkdir -p ~/.ssh
  - sh -c "if [ ${CI_BUILD_STAGE} != 'deploy' ]; then ssh-keyscan git.vauxoo.com >> ~/.ssh/known_hosts; fi"
  - sh -c "if [ ${CI_BUILD_STAGE} != 'deploy' ]; then ssh-keyscan github.com >> ~/.ssh/known_hosts; fi"
  - sh -c "if [ ${CI_BUILD_STAGE} != 'deploy' ]; then echo \"$PRIVATE_DEPLOY_KEY\" >> ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa && echo \"Added the coward key\"; fi"

lint:
  stage: test
  tags:
    - lint
  variables:
    LINT_CHECK: "1"
    TESTS: "0"
  script:
    - export TRAVIS_BUILD_DIR=$(pwd)
    - git clone https://github.com/vauxoo/maintainer-quality-tools.git -b master ${TRAVIS_BUILD_DIR}/maintainer-quality-tools
    - export PATH=${TRAVIS_BUILD_DIR}/maintainer-quality-tools/travis:${PATH}
    - travis_install_nightly
    - travis_run_tests

test:
  stage: test
  tags:
    - odoo
    - test
  variables:
    LINT_CHECK: "0"
    TESTS: "1"
  script:
    - export TRAVIS_BUILD_DIR=$(pwd)
    - git clone https://github.com/vauxoo/maintainer-quality-tools.git -b master ${TRAVIS_BUILD_DIR}/maintainer-quality-tools
    - export PATH=${TRAVIS_BUILD_DIR}/maintainer-quality-tools/travis:${PATH}
    - apt-get update && apt-get install -y tree
    - travis_install_nightly
    - rm -rf /root/odoo-${VERSION} ; git clone -b saas-14 --single-branch --depth=1 -q https://github.com/Vauxoo/odoo.git /root/odoo-${VERSION}
    - wget https://raw.githubusercontent.com/OCA/maintainer-quality-tools/master/cfg/.coveragerc
    - ls -lah
    - pwd
    - tree -L 2
    - travis_run_tests
    - coverage report -m --show-missing --rcfile=${TRAVIS_BUILD_DIR}/.coveragerc
    - cat ${HOME}/.openerp_serverrc

test_install_wdemo:
  stage: test
  tags:
    - odoo
    - test
  variables:
    LINT_CHECK: "0"
    TESTS: "0"
  script:
    - /etc/init.d/postgresql start
    - export TRAVIS_BUILD_DIR=$(pwd)
    - git clone https://github.com/vauxoo/maintainer-quality-tools.git -b master ${TRAVIS_BUILD_DIR}/maintainer-quality-tools
    - export PATH=${TRAVIS_BUILD_DIR}/maintainer-quality-tools/travis:${PATH}
    - travis_install_nightly
    - rm -rf /root/odoo-${VERSION} && git clone -b saas-14 --single-branch --depth=1 -q https://github.com/Vauxoo/odoo.git /root/odoo-${VERSION}
    - createdb odoo_install
    - /root/odoo-${VERSION}/odoo-bin -d odoo_install --log-level=info --stop-after-init --init ${INSTALL} --addons-path=/root/odoo-${VERSION}/addons,${CI_PROJECT_DIR} --log-handler openerp.tools.yaml_import:DEBUG --log-handler openerp.models.schema:DEBUG



tests_build:
  stage: test_build
  only:
    - branches
  except:
    - "10.0"
  tags:
    - build
  script:
    - docker pull postgres:${PSQL_VERSION}
    - docker pull ${BASE_IMAGE}
    - export IMAGE_NAME=$(python -c "print '${CI_BUILD_REF_NAME}'.replace('.', '').replace('#', '')")
    - sh -c "if  docker ps | grep postgres${IMAGE_NAME} >/dev/null ; then docker rm -f postgres${IMAGE_NAME}; fi"
    - sh -c "if  docker ps | grep ${IMAGE_NAME} >/dev/null ; then docker rm -f instance${IMAGE_NAME}; fi"
    - docker run --name postgres${IMAGE_NAME} -e POSTGRES_PASSWORD=postgres -d postgres:${PSQL_VERSION}
    - sleep 5
    - docker ps -a
    - deployvcmd build -b ${CI_BUILD_REF_NAME} -u ${CI_BUILD_REPO} -v ${VERSION} -i ${BASE_IMAGE}
    - docker exec postgres${IMAGE_NAME} su postgres -c "psql -c \"create user odoo with password 'odoo' createdb\""
    - docker run -d --name instance${IMAGE_NAME} -e "DB_USER=odoo" -e "DB_PASSWORD=odoo" -e "DB_HOST=postgres" -e "ODOO_CONFIG_FILE=/home/odoo/.openerp_serverrc" --link postgres${IMAGE_NAME}:postgres instance${IMAGE_NAME}
    - sleep 10
    - docker exec instance${IMAGE_NAME} supervisorctl stop odoo
    - docker exec instance${IMAGE_NAME} su odoo -c "/home/odoo/instance/odoo/odoo-bin -d wdemo -i ${INSTALL} --stop-after-init"
    - docker exec instance${IMAGE_NAME} su odoo -c "/home/odoo/instance/odoo/odoo-bin -d wodemo -i ${INSTALL} --stop-after-init --without-demo=all"

clean_build:
  stage: cleanup
  only:
    - branches
  except:
    - 10.0@vauxoo/instance
  tags:
    - build
  script:
    - export IMAGE_NAME=$(python -c "print '${CI_BUILD_REF_NAME}'.replace('.', '').replace('#', '')")
    - sh -c "if  docker ps | grep postgres${IMAGE_NAME} >/dev/null ; then docker rm -f postgres${IMAGE_NAME}; fi"
    - sh -c "if  docker ps | grep instance${IMAGE_NAME} >/dev/null ; then docker rm -f instance${IMAGE_NAME}; fi"
  when: always

upload_image:
  stage: build
  only:
    - 10.0@vauxoo/instance
  when: on_success
  tags:
    - build
  script:
    - docker pull ${BASE_IMAGE}
    - deployvcmd build -u ${CI_BUILD_REPO} -v ${CI_BUILD_REF_NAME} -i ${BASE_IMAGE}
    - docker tag instance100 quay.io/vauxoo/vauxoo100:autobuild
    - docker push quay.io/vauxoo/vauxoo100:autobuild
